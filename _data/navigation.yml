# main links links
# url: https://mmistakes.github.io/minimal-mistakes/docs/navigation/
main:
  - title: "Android"
    url: /android/

  - title: "Android Test"
    url: /android-test/

  - title: "Java"
    url: /java/

  - title: "Linux"
    url: /linux/

  - title: "设计模式"
    url: /design-patterns/

# android links
android:
  - title: 第三方
    children:
      - title: "OkHttpClient源码解析"
        url: /android/third-party/okhttp-source-analysis/
      - title: "android universal image loader模块分析"
        url: /android/third-party/universal-image-loader-module-analysis/
  - title: 源码分析
    children:
      - title: "一张图描述View事件分发"
        url: /android/source-analysis/dispatch-touch-event-view/
      - title: "一张图描述ViewGroup事件分发"
        url: /android/source-analysis/dispatch-touch-event-viewgroup/
      - title: "一张图描述Window内部机制之Window的添加过程"
        url: /android/source-analysis/the-add-of-window/
      - title: "一张图描述Window在Activity的创建过程"
        url: /android/source-analysis/the-creation-of-window-in-activity/

# java links
java:
  - title: Effective Java
    children:
      - title: "创建和销毁对象"
        url: /java/effective-java/cado-static-factory-methods/

# linux links
linux:
  - title: shell
    children:
      - title: "Shell Script"
        url: /linux/shell-script/shell-script/

# design-patterns links
design-patterns:
  - title: 设计模式
    children:
      - title: "0.面向对象的六大原则"
        url: /design-patterns/six-principles-of-oop/
      - title: "1.单例模式"
        url: /design-patterns/singleton/
      - title: "2.Builder模式"
        url: /design-patterns/builder/
      - title: "3.原型模式"
        url: /design-patterns/prototype/
      - title: "4.工厂模式"
        url: /design-patterns/factory/
      - title: "5.抽象工厂模式"
        url: /design-patterns/abstract-factory/
      - title: "6.策略模式"
        url: /design-patterns/strategy/
      - title: "7.状态模式"
        url: /design-patterns/state/
      - title: "8.责任链模式"
        url: /design-patterns/chain-of-responsible/
      - title: "9.解释器模式"
        url: /design-patterns/interpreter/
      - title: "10.命令模式"
        url: /design-patterns/command/
      - title: "11.观察者模式"
        url: /design-patterns/observer/
      - title: "12.备忘录模式"
        url: /design-patterns/memorandum/
      - title: "13.迭代器模式"
        url: /design-patterns/iterator/
      - title: "14.模板模式"
        url: /design-patterns/template/
      - title: "15.访问者模式"
        url: /design-patterns/visitor/
      - title: "16.中介者模式"
        url: /design-patterns/mediator/
      - title: "17.代理模式"
        url: /design-patterns/proxy/
      - title: "18.组合模式"
        url: /design-patterns/composite/
      - title: "19.适配器模式"
        url: /design-patterns/adapter/
      - title: "20.装饰模式"
        url: /design-patterns/decorator/
      - title: "21.享元模式"
        url: /design-patterns/flyweight/
      - title: "22.外观模式"
        url: /design-patterns/facade/
      - title: "23.桥接模式"
        url: /design-patterns/bridge/

